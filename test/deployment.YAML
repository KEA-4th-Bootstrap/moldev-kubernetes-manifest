apiVersion: argoproj.io/v1alpha1
kind: Rollout # Rollout으로 생성
metadata:
  name: test-canary-rollout # 서비스를 명시하는 이름 맘대로 가능
spec:
  replicas: 4
  revisionHistoryLimit: 2
  selector: # 기존에 있는 pod들의 집합을 찾는 명령
    matchLabels:
      app: test-canary
  template: # 없다면 새로 만드는 template
    metadata:
      labels:
        app: test-canary
    spec:
      containers:
      - name: canary-rollouts-demo # 컨테이너 이름
        image: ziiyouth/bootstraptest:58
        imagePullPolicy: Always # 컨테이너를 올리는 정책 정의 always 항상 컨테이너가 도커 이미지와 비교했을 때 최신 버전이도록 유지
        ports:
        - containerPort: 8080
      nodeSelector:     # 이 부분을 추가
        name: ubuntu
  # 이 부분에서 카나리로 지정
  strategy:
    canary:
      maxSurge: "25%"    # canary 배포로 생성할 pod의 비율
      maxUnavailable: 0  # 업데이트 될 때 사용할 수 없는 pod의 최대 수
      steps:
      - setWeight: 25    # 카나리로 배포된 서버로 전송해야될 트래픽 비율
      - pause: {}        # AutoPromotion Time (하단 설명 참조)
---
kind: Service
apiVersion: v1
metadata:
  name: test-service
spec:
  selector:
    app: test-canary
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30000 # 외부 클러스터에서 노출되는 포트
  type: NodePort # 외부 클러스터에서 인식하는 방법을 정의
